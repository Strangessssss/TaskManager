<Window x:Class="TaskManagaerBeta.Views.TaskManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskManagaerBeta.UserControls"
        xmlns:viewmodels="clr-namespace:TaskManagaerBeta.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" AllowsTransparency="True" Height="600" Width="800" Background="Transparent" WindowStyle="None" ResizeMode="CanMinimize">
    <Window.DataContext>
        <viewmodels:TaskManagerViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="AnimatedButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.2" Duration="0:0:0.2" />
                                <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.2" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.2" />
                                <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource Secondary}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource HeaderBorderColor}"
                                BorderThickness="0 0 0.8 0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
        
                                <Label Grid.Row="0"
                                       Margin="0 -10 0 0"
                                       Foreground="Azure"
                                       x:Name="SortIcon"
                                       HorizontalAlignment="Center" />
        
                                <Label Grid.Row="1"
                                       Margin="0 -18 0 -1"
                                       Foreground="Azure"
                                       Content="{TemplateBinding Content}"
                                       VerticalAlignment="Center" />
                            </Grid>
                        </Border>
        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderPressedColor}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortIcon" Property="Content" Value="{materialDesign:PackIcon Kind=ChevronUp}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortIcon" Property="Content" Value="{materialDesign:PackIcon Kind=ChevronDown}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="{x:Null}">
                                <Setter TargetName="SortIcon" Property="Content" Value=""/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="CenteringTextStyle" TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel Dock="Top" VerticalAlignment="Stretch">
        <local:TaskBar DockPanel.Dock="Top"/>
        <Grid ShowGridLines="False" DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftPanel" Width="0.4*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Column="0" Background="#292929">
                <Grid ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition  Height="0.15*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid >
                        <StackPanel x:Name="StackPanel" HorizontalAlignment="Right">
                            <Button Margin="10" Width="40" Background="Transparent" Click="HideShow" BorderBrush="Transparent" Style="{StaticResource AnimatedButtonStyle}">
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Button.RenderTransform>
                                <Image Source="/ButtonAppearance/Images/symbols.png"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Column="1" Background="#1c1c1c">
                <Grid ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.15*"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Margin="0 20 30 20" Background="Transparent" Command="{Binding StartClownModeCommand}" BorderBrush="Transparent" Style="{StaticResource AnimatedButtonStyle}">
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Button.RenderTransform>
                                <Image Source="{Binding ClownModeButtonImage}"/>
                            </Button>
                            <Button Margin="0 20 10 20" Background="Transparent" Command="{Binding StopUpdateCommand}" BorderBrush="Transparent" Style="{StaticResource AnimatedButtonStyle}">
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Button.RenderTransform>
                                <Image Source="{Binding StopUpdateButtonImage}"/>
                            </Button>
                            <Button Margin="0 20 30 20" Background="Transparent" Command="{Binding StartCommand}" BorderBrush="Transparent" Style="{StaticResource AnimatedButtonStyle}">
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Button.RenderTransform>
                                <Image Source="{Binding StartButtonImage}"></Image>
                            </Button>
                            <TextBox Margin="0 20 0 20" Width="200" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0">
                            </TextBox>
                            <Button Margin="20" Background="Transparent" Command="{Binding RunCommand}" BorderBrush="Transparent" Style="{StaticResource AnimatedButtonStyle}">
                                <Button.RenderTransformOrigin>0.5,0.5</Button.RenderTransformOrigin>
                                <Button.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Button.RenderTransform>
                                <Image Source="{Binding NewProcessButtonImage}"></Image>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1">
                        <DataGrid Background="Transparent" Margin="10 0 0 0" FontSize="15" RowHeight="35" ColumnHeaderStyle="{StaticResource CustomHeaderStyle}" Foreground="Azure" RowHeaderWidth="0"  GridLinesVisibility="Vertical" VerticalGridLinesBrush="#242424" RowBackground="#2b2b2b" BorderBrush="Transparent" AlternatingRowBackground="#1c1c1c" BorderThickness="0" AutoGenerateColumns="False" CellStyle="{StaticResource CenteringTextStyle}" ItemsSource="{Binding Processes}">
                            <DataGrid.Columns>
                                <DataGridTextColumn  Binding="{Binding ProcessName, Mode=OneWay}" Width="*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock >Process Name</TextBlock>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn  Binding="{Binding Status, Mode=OneWay}" Width="*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.Header>
                                        <TextBlock >Status</TextBlock>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding MemoryUsage, Mode=OneWay}" Width="*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.Header>
                                        <StackPanel HorizontalAlignment="Stretch">
                                            <TextBlock DockPanel.Dock="Left">Memory Usage</TextBlock>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Binding="{Binding MemoryUsage, Mode=OneWay}" Width="*">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.Header>
                                        <StackPanel HorizontalAlignment="Stretch">
                                            <TextBlock DockPanel.Dock="Left">Memory Usage</TextBlock>
                                        </StackPanel>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
